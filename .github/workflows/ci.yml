name: CI
on:
  workflow_dispatch:
    inputs:
      tests:
        description: "What tests to run. Available options: rejson, rts, redisearch, redisgraph, redisgears, redisbloom, rebloom-topk, rebloom-cmk, rebloom-cuckoo, redis-ai, ris. Use 'All' to run all tests."
        required: true
        default: 'All'
  pull_request: 
    branches: [master]
jobs:
  #Verifying build and compilation
  Setup:
    runs-on: ubuntu-latest
    outputs:
      files: ${{ steps.files.outputs.all }}
      #ReJSON
      rejson-selected: ${{(github.event_name == 'workflow_dispatch' && (contains(github.event.inputs.tests, 'rejson') || github.event.inputs.tests == 'All'))}}
      rejson-code-changes: ${{github.event_name == 'pull_request' && contains(steps.files.outputs.all, '/rejson/')}}
      rejson-test-changes: ${{github.event_name == 'pull_request' && contains(steps.files.outputs.all, 'rejson.ts')}}
      #RTS
      rts-selected: ${{(github.event_name == 'workflow_dispatch' && (contains(github.event.inputs.tests, 'rts') || github.event.inputs.tests == 'All'))}}
      rts-code-changes: ${{github.event_name == 'pull_request' && contains(steps.files.outputs.all, '/rts/')}}
      rts-test-changes: ${{github.event_name == 'pull_request' && contains(steps.files.outputs.all, 'rts.ts')}}
      #RediSearch
      redisearch-selected: ${{(github.event_name == 'workflow_dispatch' && (contains(github.event.inputs.tests, 'redisearch') || github.event.inputs.tests == 'All'))}}
      redisearch-code-changes: ${{github.event_name == 'pull_request' && contains(steps.files.outputs.all, '/redisearch/')}}
      redisearch-test-changes: ${{github.event_name == 'pull_request' && contains(steps.files.outputs.all, 'redisearch.ts')}}
      #RedisGraph
      redisgraph-selected: ${{(github.event_name == 'workflow_dispatch' && (contains(github.event.inputs.tests, 'redisgraph') || github.event.inputs.tests == 'All'))}}
      redisgraph-code-changes: ${{github.event_name == 'pull_request' && contains(steps.files.outputs.all, '/redisgraph/')}}
      redisgraph-test-changes: ${{github.event_name == 'pull_request' && contains(steps.files.outputs.all, 'redisgraph.ts')}}
      #RedisGears
      redisgears-selected: ${{(github.event_name == 'workflow_dispatch' && (contains(github.event.inputs.tests, 'redisgears') || github.event.inputs.tests == 'All'))}}
      redisgears-code-changes: ${{github.event_name == 'pull_request' && contains(steps.files.outputs.all, '/redisgears/')}}
      redisgears-test-changes: ${{github.event_name == 'pull_request' && contains(steps.files.outputs.all, 'redisgears.ts')}}
      #RedisBloom
      redisbloom-selected: ${{(github.event_name == 'workflow_dispatch' && (contains(github.event.inputs.tests, 'redisbloom') || github.event.inputs.tests == 'All'))}}
      redisbloom-code-changes: ${{github.event_name == 'pull_request' && contains(steps.files.outputs.all, '/bloom/')}}
      redisbloom-test-changes: ${{github.event_name == 'pull_request' && contains(steps.files.outputs.all, 'redisbloom.ts')}}
      #RedisBloom Topk
      rebloom-topk-selected: ${{(github.event_name == 'workflow_dispatch' && (contains(github.event.inputs.tests, 'rebloom-topk') || github.event.inputs.tests == 'All'))}}
      rebloom-topk-code-changes: ${{github.event_name == 'pull_request' && contains(steps.files.outputs.all, '/bloom-topk/')}}
      rebloom-topk-test-changes: ${{github.event_name == 'pull_request' && contains(steps.files.outputs.all, 'redisbloom-topk.ts')}}
      #RedisBloom CMK
      rebloom-cmk-selected: ${{(github.event_name == 'workflow_dispatch' && (contains(github.event.inputs.tests, 'rebloom-cmk') || github.event.inputs.tests == 'All'))}}
      rebloom-cmk-code-changes: ${{github.event_name == 'pull_request' && contains(steps.files.outputs.all, '/bloom-cmk/')}}
      rebloom-cmk-test-changes: ${{github.event_name == 'pull_request' && contains(steps.files.outputs.all, 'redisbloom-cmk.ts')}}
      #RedisBloom Cuckoo
      rebloom-cuckoo-selected: ${{(github.event_name == 'workflow_dispatch' && (contains(github.event.inputs.tests, 'rebloom-cuckoo') || github.event.inputs.tests == 'All'))}}
      rebloom-cuckoo-code-changes: ${{github.event_name == 'pull_request' && contains(steps.files.outputs.all, '/bloom-cuckoo/')}}
      rebloom-cuckoo-test-changes: ${{github.event_name == 'pull_request' && contains(steps.files.outputs.all, 'redisbloom-cuckoo.ts')}}
      #RedisBloom TDigest
      rebloom-tdigest-selected: ${{(github.event_name == 'workflow_dispatch' && (contains(github.event.inputs.tests, 'rebloom-tdigest') || github.event.inputs.tests == 'All'))}}
      rebloom-tdigest-code-changes: ${{github.event_name == 'pull_request' && contains(steps.files.outputs.all, '/bloom-tdigest/')}}
      rebloom-tdigest-test-changes: ${{github.event_name == 'pull_request' && contains(steps.files.outputs.all, 'redisbloom-tdigest.ts')}}
      #Redis AI
      redis-ai-selected: ${{(github.event_name == 'workflow_dispatch' && (contains(github.event.inputs.tests, 'redis-ai') || github.event.inputs.tests == 'All'))}}
      redis-ai-code-changes: ${{github.event_name == 'pull_request' && contains(steps.files.outputs.all, '/redis-ai/')}}
      redis-ai-test-changes: ${{github.event_name == 'pull_request' && contains(steps.files.outputs.all, 'redis-ai.ts')}}
      #Redis Interval Sets
      ris-selected: ${{(github.event_name == 'workflow_dispatch' && (contains(github.event.inputs.tests, 'ris') || github.event.inputs.tests == 'All'))}}
      ris-code-changes: ${{github.event_name == 'pull_request' && contains(steps.files.outputs.all, '/ris/')}}
      ris-test-changes: ${{github.event_name == 'pull_request' && contains(steps.files.outputs.all, 'ris.ts')}}
    steps:
      - uses: actions/checkout@v2
      - id: files
        if: github.event_name != 'workflow_dispatch'
        uses: jitterbit/get-changed-files@v1
      - name: Setup
        run: npm i
      - name: Linting
        run: ./node_modules/.bin/eslint .
      - name: Build
        run: npm run build
      - uses: docker-practice/actions-setup-docker@master
        with:
          docker_channel: nightly
          docker_nightly_version: snapshot-20200915
      - name: Setting up Redis
        run: npm run run-redis
      - name: Running tests
        run: npm i && npm run redis-module-base-tests
  #Build for 'ReJSON' module
  ReJSON:
    needs: Setup
    if: needs.Setup.outputs.rejson-selected == 'true' || needs.Setup.outputs.rejson-code-changes == 'true' || needs.Setup.outputs.rejson-test-changes == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: docker-practice/actions-setup-docker@master
      with:
        docker_channel: nightly
        docker_nightly_version: snapshot-20200915
    - uses: actions/checkout@v2
    - name: Setting up Redis
      run: npm run run-redis-with-rejson-module
    - name: Running tests
      run: npm i && npm run rejson-module-tests
  #Build for 'Redis Times Series' module
  RTS:
    needs: Setup
    if: needs.Setup.outputs.rts-selected == 'true' || needs.Setup.outputs.rts-code-changes == 'true' || needs.Setup.outputs.rts-test-changes == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: docker-practice/actions-setup-docker@master
      with:
        docker_channel: nightly
        docker_nightly_version: snapshot-20200915
    - uses: actions/checkout@v2
    - name: Setting up Redis
      run: npm run run-redis-with-rts-module
    - name: Running tests
      run: npm i && npm run rts-module-tests
  #Build for 'Redis Search' module
  Redisearch:
    needs: Setup
    if: needs.Setup.outputs.redisearch-selected == 'true' || needs.Setup.outputs.redisearch-code-changes == 'true' || needs.Setup.outputs.redisearch-test-changes == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: docker-practice/actions-setup-docker@master
      with:
        docker_channel: nightly
        docker_nightly_version: snapshot-20200915
    - uses: actions/checkout@v2
    - name: Setting up Redis
      run: npm run run-redis-with-redisearch-module
    - name: Running tests
      run: npm i && npm run redisearch-module-tests
  #Build for 'Redis Graph module
  RedisGraph:
    needs: Setup
    if: needs.Setup.outputs.redisgraph-selected == 'true' || needs.Setup.outputs.redisgraph-code-changes == 'true' || needs.Setup.outputs.redisgraph-test-changes == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: docker-practice/actions-setup-docker@master
      with:
        docker_channel: nightly
        docker_nightly_version: snapshot-20200915
    - uses: actions/checkout@v2
    - name: Setting up Redis
      run: npm run run-redis-with-redisgraph-module
    - name: Running tests
      run: npm i && npm run redisgraph-module-tests
  #Build for 'RedisGears' module
  RedisGears:
    needs: Setup
    if: needs.Setup.outputs.redisgears-selected == 'true' || needs.Setup.outputs.redisgears-code-changes == 'true' || needs.Setup.outputs.redisgears-test-changes == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: docker-practice/actions-setup-docker@master
      with:
        docker_channel: nightly
        docker_nightly_version: snapshot-20200915
    - uses: actions/checkout@v2
    - name: Setting up Redis
      run: npm run run-redis-with-redisgears-module
    - name: Running tests
      run: npm i && npm run redisgears-module-tests
  #Build for 'Redis Bloom' module
  ReBloom:
    needs: Setup
    if: needs.Setup.outputs.redisbloom-selected == 'true' || needs.Setup.outputs.redisbloom-code-changes == 'true' || needs.Setup.outputs.redisbloom-test-changes == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: docker-practice/actions-setup-docker@master
      with:
        docker_channel: nightly
        docker_nightly_version: snapshot-20200915
    - uses: actions/checkout@v2
    - name: Setting up Redis
      run: npm run run-redis-with-bloom-module
    - name: Running tests
      run: npm i && npm run redisbloom-filter-tests
  #Build for 'Redis Bloom TopK' filter
  ReBloomTopK:
    needs: Setup
    if: needs.Setup.outputs.rebloom-topk-selected == 'true' || needs.Setup.outputs.rebloom-topk-code-changes == 'true' || needs.Setup.outputs.rebloom-topk-test-changes == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: docker-practice/actions-setup-docker@master
      with:
        docker_channel: nightly
        docker_nightly_version: snapshot-20200915
    - uses: actions/checkout@v2
    - name: Setting up Redis
      run: npm run run-redis-with-bloom-module
    - name: Running tests
      run: npm i && npm run redisbloom-topk-filter-tests
  #Build for 'Redis Bloom CMK' filter
  ReBloomCMK:
    needs: Setup
    if: needs.Setup.outputs.rebloom-cmk-selected == 'true' || needs.Setup.outputs.rebloom-cmk-code-changes == 'true' || needs.Setup.outputs.rebloom-cmk-test-changes == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: docker-practice/actions-setup-docker@master
      with:
        docker_channel: nightly
        docker_nightly_version: snapshot-20200915
    - uses: actions/checkout@v2
    - name: Setting up Redis
      run: npm run run-redis-with-bloom-module
    - name: Running tests
      run: npm i && npm run redisbloom-cmk-filter-tests
  #Build for 'Redis Bloom Cuckoo' filter
  ReBloomCuckoo:
    needs: Setup
    if: needs.Setup.outputs.rebloom-cuckoo-selected == 'true' || needs.Setup.outputs.rebloom-cuckoo-code-changes == 'true' || needs.Setup.outputs.rebloom-cuckoo-test-changes == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: docker-practice/actions-setup-docker@master
      with:
        docker_channel: nightly
        docker_nightly_version: snapshot-20200915
    - uses: actions/checkout@v2
    - name: Setting up Redis
      run: npm run run-redis-with-bloom-module
    - name: Running tests
      run: npm i && npm run redisbloom-cuckoo-filter-tests
  #Build for 'Redis Bloom TDigest' filter
  ReBloomTDigest:
    needs: Setup
    if: needs.Setup.outputs.rebloom-tdigest-selected == 'true' || needs.Setup.outputs.rebloom-tdigest-code-changes == 'true' || needs.Setup.outputs.rebloom-tdigest-test-changes == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: docker-practice/actions-setup-docker@master
      with:
        docker_channel: nightly
        docker_nightly_version: snapshot-20200915
    - uses: actions/checkout@v2
    - name: Setting up Redis
      run: docker run -p 6379:6379 -d --rm redislabs/rebloom:edge && docker ps -a
    - name: Running tests
      run: npm i && npm run redisbloom-tdigest-filter-tests
  #Build for 'Redis AI' module
  RedisAI:
    needs: Setup
    if: needs.Setup.outputs.redis-ai-selected == 'true' || needs.Setup.outputs.redis-ai-code-changes == 'true' || needs.Setup.outputs.redis-ai-test-changes == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: docker-practice/actions-setup-docker@master
      with:
        docker_channel: nightly
        docker_nightly_version: snapshot-20200915
    - uses: actions/checkout@v2
    - name: Setting up Redis
      run: npm run run-redis-with-redisai-module
    - name: Running tests
      run: npm i && npm run redis-ai-module-tests
  #Build for 'Redis Interval Sets' module
  RIS:
    needs: Setup
    if: needs.Setup.outputs.ris-selected == 'true' || needs.Setup.outputs.ris-code-changes == 'true' || needs.Setup.outputs.ris-test-changes == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: docker-practice/actions-setup-docker@master
      with:
        docker_channel: nightly
        docker_nightly_version: snapshot-20200915
    - uses: actions/checkout@v2
    - name: Setting up Redis
      run: npm run run-redis-with-ris-module
    - name: Running tests
      run: npm i && npm run ris-module-tests